// <auto-generated />
using DapperFormation.EfPreparation;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DapperFormation.Migrations
{
    [DbContext(typeof(EfContext))]
    [Migration("20210401193927_ajoutNomDeclaration")]
    partial class ajoutNomDeclaration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("DapperFormation.Models.Attestation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT")
                        .HasColumnName("nom");

                    b.Property<int>("ProfessionnelId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_professionnel");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionnelId");

                    b.ToTable("oe_attestation");
                });

            modelBuilder.Entity("DapperFormation.Models.Declaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT")
                        .HasColumnName("nom");

                    b.Property<int>("ProjetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_projet");

                    b.HasKey("Id");

                    b.HasIndex("ProjetId");

                    b.ToTable("oe_declaration");
                });

            modelBuilder.Entity("DapperFormation.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("NomFichier")
                        .HasColumnType("TEXT")
                        .HasColumnName("nom_fichier");

                    b.HasKey("Id");

                    b.ToTable("oe_document");
                });

            modelBuilder.Entity("DapperFormation.Models.PieceJointe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("AttestationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_attestation");

                    b.Property<int>("DeclarationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_declaration");

                    b.Property<int>("DocumentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id_document");

                    b.Property<string>("Titre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AttestationId");

                    b.HasIndex("DeclarationId");

                    b.HasIndex("DocumentId");

                    b.ToTable("oe_piece_jointe");
                });

            modelBuilder.Entity("DapperFormation.Models.Professionnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("oe_professionnel");
                });

            modelBuilder.Entity("DapperFormation.Models.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("oe_projet");
                });

            modelBuilder.Entity("DapperFormation.Models.Attestation", b =>
                {
                    b.HasOne("DapperFormation.Models.Professionnel", "Professionnel")
                        .WithMany()
                        .HasForeignKey("ProfessionnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professionnel");
                });

            modelBuilder.Entity("DapperFormation.Models.Declaration", b =>
                {
                    b.HasOne("DapperFormation.Models.Projet", null)
                        .WithMany("Declarations")
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DapperFormation.Models.PieceJointe", b =>
                {
                    b.HasOne("DapperFormation.Models.Attestation", "Attestation")
                        .WithMany()
                        .HasForeignKey("AttestationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DapperFormation.Models.Declaration", null)
                        .WithMany("PiecesJointes")
                        .HasForeignKey("DeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DapperFormation.Models.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attestation");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("DapperFormation.Models.Declaration", b =>
                {
                    b.Navigation("PiecesJointes");
                });

            modelBuilder.Entity("DapperFormation.Models.Projet", b =>
                {
                    b.Navigation("Declarations");
                });
#pragma warning restore 612, 618
        }
    }
}
